openapi: 3.0.1
servers:
- url: /investment
  description: Default Server URL
paths:
  /v1/transaction:
    post:
      tags:
      - transaction-controller
      operationId: createTransaction
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      - name: x-idempotency-key
        in: header
        required: false
        schema:
          type: string
          default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/portfolio:
    post:
      tags:
      - portfolio-controller
      operationId: createPortfolio
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/end-customer-profile:
    post:
      tags:
      - end-customer-profile-controller
      operationId: onboardEndCustomerProfile
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndCustomerOnboardRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/settle-transaction/{transaction-id}:
    post:
      tags:
      - customer-profile-controller
      operationId: settleTransaction
      parameters:
      - name: transaction-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/bank/transfer:
    post:
      tags:
      - customer-profile-controller
      operationId: transferFunds
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      - name: x-idempotency-key
        in: header
        required: false
        schema:
          type: string
          default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestmentPayBeneficiaryRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/bank/beneficiary:
    post:
      tags:
      - customer-profile-controller
      operationId: createBeneficiary
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestmentBeneficiaryDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/transaction/{transaction-id}:
    get:
      tags:
      - transaction-controller
      operationId: getTransactionDetails
      parameters:
      - name: transaction-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/providers:
    get:
      tags:
      - provider-controller
      operationId: getProviders
      parameters:
      - name: region
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/providers/assets/{provider-id}:
    get:
      tags:
      - provider-controller
      operationId: getProviderAssets
      parameters:
      - name: provider-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/providers/assets/all:
    get:
      tags:
      - provider-controller
      operationId: getAllAssets
      parameters:
      - name: region
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/portfolio/{provider-id}/asset/{asset-symbol}/time-series:
    get:
      tags:
      - portfolio-controller
      operationId: getPortfolioRateTimeSeries
      parameters:
      - name: provider-id
        in: path
        required: true
        schema:
          type: string
      - name: asset-symbol
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      - name: frequency-type
        in: query
        required: true
        schema:
          type: string
      - name: page-token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: reverse-page-token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: from-timestamp
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: to-timestamp
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: order
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/portfolio/{portfolio-id}:
    get:
      tags:
      - portfolio-controller
      operationId: getPortfolioDetails
      parameters:
      - name: portfolio-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - portfolio-controller
      operationId: deletePortfolio
      parameters:
      - name: portfolio-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/portfolio/{portfolio-id}/transactions:
    get:
      tags:
      - portfolio-controller
      operationId: getPortfolioTransactions
      parameters:
      - name: portfolio-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      - name: page-token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: reverse-page-token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: from-timestamp
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: to-timestamp
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: order
        in: query
        required: false
        schema:
          type: string
          default: DESC
          enum:
          - DESC
          - ASC
          - UNRECOGNIZED
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/portfolio/{portfolio-id}/time-series:
    get:
      tags:
      - portfolio-controller
      operationId: getPortfolioRateTimeSeries_1
      parameters:
      - name: portfolio-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      - name: frequency-type
        in: query
        required: true
        schema:
          type: string
      - name: page-token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: reverse-page-token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: from-timestamp
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: to-timestamp
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: order
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/portfolio/{portfolio-id}/rate:
    get:
      tags:
      - portfolio-controller
      operationId: getRate
      parameters:
      - name: portfolio-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/end-customer-profile/{end-customer-profile-id}:
    get:
      tags:
      - end-customer-profile-controller
      operationId: getEndCustomerProfile
      parameters:
      - name: end-customer-profile-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - end-customer-profile-controller
      operationId: deleteEndCustomerProfile
      parameters:
      - name: end-customer-profile-id
        in: path
        required: true
        schema:
          type: string
      - name: provider-id
        in: query
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/end-customer-profile/{end-customer-profile-id}/transactions:
    get:
      tags:
      - end-customer-profile-controller
      operationId: getTransactions
      parameters:
      - name: end-customer-profile-id
        in: path
        required: true
        schema:
          type: string
      - name: order
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: items_per_page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      - name: page_token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: status
        in: query
        required: false
        schema:
          type: string
          default: TRANSACTION_STATUS_UNKNOWN
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile:
    get:
      tags:
      - customer-profile-controller
      operationId: getCustomerOnBoardingStatus
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/transactions:
    get:
      tags:
      - customer-profile-controller
      operationId: getTransactions_1
      parameters:
      - name: order
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: items_per_page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      - name: page_token
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: status
        in: query
        required: false
        schema:
          type: string
          default: TRANSACTION_STATUS_UNKNOWN
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/bank/transfer/{transaction-id}:
    get:
      tags:
      - customer-profile-controller
      operationId: getTransferDetails
      parameters:
      - name: transaction-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/bank/deposit/{transaction-id}:
    get:
      tags:
      - customer-profile-controller
      operationId: getDepositDetails
      parameters:
      - name: transaction-id
        in: path
        required: true
        schema:
          type: string
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/bank/beneficiaries:
    get:
      tags:
      - customer-profile-controller
      operationId: getBeneficiaries
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /v1/customer-profile/bank/account:
    get:
      tags:
      - customer-profile-controller
      operationId: getBankAccountDetails
      parameters:
      - name: x-customer-profile-id
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    AssetRateDTO:
      type: object
      properties:
        assetSymbol:
          type: string
        offerPrice:
          type: number
          format: double
        bidPrice:
          type: number
          format: double
        token:
          type: string
        timestamp:
          type: string
        expiryTime:
          $ref: '#/components/schemas/Timestamp'
        providerId:
          type: string
    PortfolioRateDTO:
      type: object
      properties:
        assetRates:
          type: array
          items:
            $ref: '#/components/schemas/AssetRateDTO'
    Timestamp:
      type: object
      properties:
        seconds:
          type: integer
          format: int64
        nanos:
          type: integer
          format: int32
    TransactionRequestDTO:
      type: object
      properties:
        portfolioId:
          type: string
        amount:
          type: number
          format: double
        transactionType:
          type: string
          enum:
          - TRANSACTION_TYPE_UNKNOWN
          - INVEST
          - WITHDRAW
          - UNRECOGNIZED
        rate:
          $ref: '#/components/schemas/PortfolioRateDTO'
        metadata:
          type: object
          additionalProperties:
            type: string
          deprecated: true
        recordedAmount:
          type: number
          format: double
        recordedRate:
          $ref: '#/components/schemas/PortfolioRateDTO'
    Any:
      type: object
      properties:
        typeUrl:
          type: string
        value:
          $ref: '#/components/schemas/ByteString'
    ApiResponse:
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/ApiResponseHeader'
        data:
          $ref: '#/components/schemas/Any'
        pageToken:
          type: string
        hasMorePages:
          type: boolean
        reversePageToken:
          type: string
        hasMoreReversePages:
          type: boolean
    ApiResponseHeader:
      type: object
      properties:
        statusCode:
          type: string
        message:
          type: string
        traceId:
          type: string
    ByteString:
      type: object
      properties:
        empty:
          type: boolean
        validUtf8:
          type: boolean
    AllocationDTO:
      type: object
      properties:
        assets:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioAssetDTO'
    PortfolioAssetDTO:
      type: object
      properties:
        assetSymbol:
          type: string
        percentage:
          type: number
          format: double
        providerId:
          type: string
    PortfolioRequestDTO:
      type: object
      properties:
        endCustomerProfileId:
          type: string
        portfolioName:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          deprecated: true
        portfolioAllocation:
          type: array
          items:
            $ref: '#/components/schemas/AllocationDTO'
        allocationStrategy:
          $ref: '#/components/schemas/StrategyDTO'
        rebalancingStrategy:
          $ref: '#/components/schemas/StrategyDTO'
    StrategyDTO:
      type: object
      properties:
        frequency:
          type: string
          enum:
          - FREQUENCY_UNKNOWN
          - WEEKLY
          - MONTHLY
          - QUARTERLY
          - HALF_YEARLY
          - YEARLY
          - NEVER
          - UNRECOGNIZED
    EndCustomerOnboardRequestDTO:
      type: object
      properties:
        endCustomerProfileId:
          type: string
        providerId:
          type: array
          properties:
            underlyingElements:
              type: array
              items:
                type: object
            empty:
              type: boolean
          items:
            type: string
    InvestmentPayBeneficiaryRequestDTO:
      type: object
      properties:
        beneficiaryId:
          type: string
        amount:
          type: number
          format: double
        metadata:
          type: object
          additionalProperties:
            type: string
          deprecated: true
        purpose:
          type: string
        currency:
          type: string
          enum:
          - CURRENCY_UNKNOWN
          - SGD
          - UNRECOGNIZED
    Address:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        city:
          type: string
        state:
          type: string
        countryCode:
          type: string
        localCode:
          type: string
    BankCodeDetailsDTO:
      type: object
      properties:
        sgBankCodeDetails:
          $ref: '#/components/schemas/SGBank'
    InvestmentBankAccountDetailsDTO:
      type: object
      properties:
        accountNumber:
          type: string
        bankName:
          type: string
        currency:
          type: string
          enum:
          - CURRENCY_UNKNOWN
          - SGD
          - UNRECOGNIZED
        country:
          type: string
          enum:
          - COUNTRY_UNKNOWN
          - SGP
          - UNRECOGNIZED
        bankCodeDetails:
          $ref: '#/components/schemas/BankCodeDetailsDTO'
    InvestmentBeneficiaryDTO:
      type: object
      properties:
        beneficiaryName:
          type: string
        beneficiaryAccountDetails:
          $ref: '#/components/schemas/InvestmentBankAccountDetailsDTO'
        address:
          $ref: '#/components/schemas/Address'
        beneficiaryEmail:
          type: string
    SGBank:
      type: object
      properties:
        swiftBic:
          type: string
        iban:
          type: string
